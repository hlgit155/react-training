{"ast":null,"code":"var _jsxFileName = \"/Users/ritikagurung/Documents/Git/tcs-react-training/src/components/Topbar/Topbar.jsx\",\n  _s = $RefreshSig$();\nimport { TopbarWrap, TopbarItem } from \"./Topbar.styles\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\n\n// function Topbar({ mainMenu }) {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Topbar(props) {\n  _s();\n  const {\n    mainMenu\n  } = props;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(TopbarWrap, {\n    children: mainMenu.map((item, index) => {\n      /*-- FEEDBACK --*/\n      // the routeLink should return \"item.url\" instead of \"title\", otherewise there will be capital in the url,\n      // it's ok to have capital, but there will be issue when there's other special characters or spaces in title,\n      // that's why we're using object called \"url\", data should be changed/inserted in the dataset we created\n      //\n      // ** Another method is to create a convertor function to convert the format from the string of title to acceptable format,\n      // which is more complicated but oftenly necessary for some situtations\n      return /*#__PURE__*/_jsxDEV(TopbarItem, {\n        to: item.url,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n      // using 'div' below\n      // <TopbarItem key={index} onClick={() => navigate(item.url)}>{item.title}</TopbarItem>\n      ;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Topbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["TopbarWrap","TopbarItem","NavLink","useNavigate","jsxDEV","_jsxDEV","Topbar","props","_s","mainMenu","navigate","children","map","item","index","to","url","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ritikagurung/Documents/Git/tcs-react-training/src/components/Topbar/Topbar.jsx"],"sourcesContent":["import { TopbarWrap, TopbarItem } from \"./Topbar.styles\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\n\n// function Topbar({ mainMenu }) {\nfunction Topbar(props) {\n  const { mainMenu } = props;\n  const navigate = useNavigate();\n\n  return (\n    <TopbarWrap>\n      {mainMenu.map((item, index) => {\n        /*-- FEEDBACK --*/\n        // the routeLink should return \"item.url\" instead of \"title\", otherewise there will be capital in the url,\n        // it's ok to have capital, but there will be issue when there's other special characters or spaces in title,\n        // that's why we're using object called \"url\", data should be changed/inserted in the dataset we created\n        //\n        // ** Another method is to create a convertor function to convert the format from the string of title to acceptable format,\n        // which is more complicated but oftenly necessary for some situtations\n        return (\n          <TopbarItem to={item.url}>{item.title}</TopbarItem>\n          // using 'div' below\n          // <TopbarItem key={index} onClick={() => navigate(item.url)}>{item.title}</TopbarItem>\n        );\n      })}\n    </TopbarWrap>\n  );\n}\n\nexport default Topbar;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,iBAAiB;AACxD,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAC1B,MAAMG,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA,CAACL,UAAU;IAAAW,QAAA,EACRF,QAAQ,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,oBACET,OAAA,CAACJ,UAAU;QAACc,EAAE,EAAEF,IAAI,CAACG,GAAI;QAAAL,QAAA,EAAEE,IAAI,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;MAClD;MACA;MAAA;IAEJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB;AAACb,EAAA,CAtBQF,MAAM;EAAA,QAEIH,WAAW;AAAA;AAAAmB,EAAA,GAFrBhB,MAAM;AAwBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}