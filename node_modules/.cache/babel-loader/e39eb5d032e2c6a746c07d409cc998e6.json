{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/ritikagurung/Documents/Git/tcs-react-training/src/pages/Home/MainHome/MainHome.jsx\";\nimport React from \"react\";\nimport HomeContent from \"../../../components/HomeComponents/HomeContent\";\nimport homePage from \"../../../database/home-page.json\";\nimport { ParagraphWrap, TextTitle, TextContent, HR } from \"../../../components/HomeComponents/HomeContent.styles\";\nvar MainHome = function MainHome() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HomeContent, {\n    homeData: homePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HR, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), homePage.textcontent.map(function (textInfo, textIdx) {\n    return /*#__PURE__*/React.createElement(ParagraphWrap, {\n      key: textIdx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, textInfo.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextTitle, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      }, item.title), /*#__PURE__*/React.createElement(TextContent, {\n        key: index,\n        dangerouslySetInnerHTML: {\n          __html: item.text\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }));\n};\nexport default MainHome;\n\n// else if (\"options\" in item) {\n//   return (\n//     <ParagraphWrap key={index}>\n//       <TextTitle>{item.title}</TextTitle>\n//       {item.options.map((textItem, textIndex) => {\n//         return (\n//           <TextWrap key={textIndex}>\n//             {textItem.map((text, index) => (\n//               <TextContent key={index}>{text.text}</TextContent>\n//             ))}\n//           </TextWrap>\n//         );\n//       })}\n//     </ParagraphWrap>\n//   );\n// }","map":{"version":3,"names":["React","HomeContent","homePage","ParagraphWrap","TextTitle","TextContent","HR","MainHome","createElement","Fragment","homeData","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","textcontent","map","textInfo","textIdx","key","item","index","title","dangerouslySetInnerHTML","__html","text"],"sources":["/Users/ritikagurung/Documents/Git/tcs-react-training/src/pages/Home/MainHome/MainHome.jsx"],"sourcesContent":["import React from \"react\";\nimport HomeContent from \"../../../components/HomeComponents/HomeContent\";\nimport homePage from \"../../../database/home-page.json\";\nimport {\n  ParagraphWrap,\n  TextTitle,\n  TextContent,\n  HR,\n} from \"../../../components/HomeComponents/HomeContent.styles\";\n\nconst MainHome = () => {\n  return (\n    <>\n      <HomeContent homeData={homePage} />\n      <HR />\n      {homePage.textcontent.map((textInfo, textIdx) => (\n        <ParagraphWrap key={textIdx}>\n          {textInfo.map((item, index) => (\n            <>\n              <TextTitle key={index}>{item.title}</TextTitle>\n              <TextContent\n                key={index}\n                dangerouslySetInnerHTML={{ __html: item.text }}\n              />\n            </>\n          ))}\n        </ParagraphWrap>\n      ))}\n    </>\n  );\n};\n\nexport default MainHome;\n\n// else if (\"options\" in item) {\n//   return (\n//     <ParagraphWrap key={index}>\n//       <TextTitle>{item.title}</TextTitle>\n//       {item.options.map((textItem, textIndex) => {\n//         return (\n//           <TextWrap key={textIndex}>\n//             {textItem.map((text, index) => (\n//               <TextContent key={index}>{text.text}</TextContent>\n//             ))}\n//           </TextWrap>\n//         );\n//       })}\n//     </ParagraphWrap>\n//   );\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,gDAAgD;AACxE,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SACEC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXC,EAAE,QACG,uDAAuD;AAE9D,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,oBACEP,KAAA,CAAAQ,aAAA,CAAAR,KAAA,CAAAS,QAAA,qBACET,KAAA,CAAAQ,aAAA,CAACP,WAAW;IAACS,QAAQ,EAAER,QAAS;IAAAS,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACnCjB,KAAA,CAAAQ,aAAA,CAACF,EAAE;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACLf,QAAQ,CAACgB,WAAW,CAACC,GAAG,CAAC,UAACC,QAAQ,EAAEC,OAAO;IAAA,oBAC1CrB,KAAA,CAAAQ,aAAA,CAACL,aAAa;MAACmB,GAAG,EAAED,OAAQ;MAAAV,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACzBG,QAAQ,CAACD,GAAG,CAAC,UAACI,IAAI,EAAEC,KAAK;MAAA,oBACxBxB,KAAA,CAAAQ,aAAA,CAAAR,KAAA,CAAAS,QAAA,qBACET,KAAA,CAAAQ,aAAA,CAACJ,SAAS;QAACkB,GAAG,EAAEE,KAAM;QAAAb,MAAA,EAAAC,KAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEM,IAAI,CAACE,KAAiB,CAAC,eAC/CzB,KAAA,CAAAQ,aAAA,CAACH,WAAW;QACViB,GAAG,EAAEE,KAAM;QACXE,uBAAuB,EAAE;UAAEC,MAAM,EAAEJ,IAAI,CAACK;QAAK,CAAE;QAAAjB,MAAA,EAAAC,KAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAChD,CACD,CAAC;IAAA,CACJ,CACY,CAAC;EAAA,CACjB,CACD,CAAC;AAEP,CAAC;AAED,eAAeV,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}