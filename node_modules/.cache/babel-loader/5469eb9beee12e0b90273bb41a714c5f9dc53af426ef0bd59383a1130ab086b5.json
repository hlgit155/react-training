{"ast":null,"code":"var _jsxFileName = \"/Users/henry/Documents/GitHub/tcs-react-training/src/components/Topbar/Topbar.jsx\",\n  _s = $RefreshSig$();\nimport { TopbarWrap, TopbarItem } from \"./Topbar.styles\";\nimport { Routes, Route, useNavigate } from 'react-router-dom';\n\n// function Topbar({ menu }) {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Topbar(props) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    mainMenu\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TopbarWrap, {\n    children: mainMenu.map((item, index) => {\n      /*-- FEEDBACK --*/\n      // the routeLink should return \"item.url\" instead of \"title\", otherewise there will be capital in the url,\n      // it's ok to have capital, but there will be issue when there's other special characters or spaces in title,\n      // that's why we're using object called \"url\", data should be changed/inserted in the dataset we created\n      // \n      // ** Another method is to create a convertor function to convert the format from the string of title to acceptable format,\n      // which is more complicated but oftenly necessary for some situtations\n      return /*#__PURE__*/_jsxDEV(TopbarItem, {\n        onClick: () => {\n          const routeLink = item.title;\n          navigate(routeLink);\n        },\n        children: item.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Topbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["TopbarWrap","TopbarItem","Routes","Route","useNavigate","jsxDEV","_jsxDEV","Topbar","props","_s","navigate","mainMenu","children","map","item","index","onClick","routeLink","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/henry/Documents/GitHub/tcs-react-training/src/components/Topbar/Topbar.jsx"],"sourcesContent":["import { TopbarWrap, TopbarItem } from \"./Topbar.styles\";\nimport {Routes, Route, useNavigate} from 'react-router-dom';\n\n// function Topbar({ menu }) {\nfunction Topbar(props) {\n  const navigate = useNavigate();\n  const { mainMenu } = props;\n  \n  return (\n    <TopbarWrap>\n      {mainMenu.map((item,index) => {\n        /*-- FEEDBACK --*/\n        // the routeLink should return \"item.url\" instead of \"title\", otherewise there will be capital in the url,\n        // it's ok to have capital, but there will be issue when there's other special characters or spaces in title,\n        // that's why we're using object called \"url\", data should be changed/inserted in the dataset we created\n        // \n        // ** Another method is to create a convertor function to convert the format from the string of title to acceptable format,\n        // which is more complicated but oftenly necessary for some situtations\n        return <TopbarItem onClick={() => {const routeLink = item.title; navigate(routeLink)}} key={index}>{item.title}</TopbarItem>;\n      })}\n    </TopbarWrap>\n  );\n}\n\nexport default Topbar;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,iBAAiB;AACxD,SAAQC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAO,kBAAkB;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAS,CAAC,GAAGH,KAAK;EAE1B,oBACEF,OAAA,CAACN,UAAU;IAAAY,QAAA,EACRD,QAAQ,CAACE,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAK;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,oBAAOT,OAAA,CAACL,UAAU;QAACe,OAAO,EAAEA,CAAA,KAAM;UAAC,MAAMC,SAAS,GAAGH,IAAI,CAACI,KAAK;UAAER,QAAQ,CAACO,SAAS,CAAC;QAAA,CAAE;QAAAL,QAAA,EAAcE,IAAI,CAACI;MAAK,GAAlBH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CAAC;IAC9H,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB;AAACb,EAAA,CAlBQF,MAAM;EAAA,QACIH,WAAW;AAAA;AAAAmB,EAAA,GADrBhB,MAAM;AAoBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}