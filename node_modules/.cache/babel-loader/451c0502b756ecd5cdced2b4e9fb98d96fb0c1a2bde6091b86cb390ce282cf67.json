{"ast":null,"code":"var _jsxFileName = \"/Users/ritikagurung/Documents/Git/tcs-react-training/src/pages/Home/MainHome/MainHome.jsx\";\nimport React from \"react\";\nimport HomeContent from \"../../../components/HomeComponents/HomeContent\";\nimport homePage from \"../../../database/home-page.json\";\nimport { ParagraphWrap, TextTitle, TextContent, HR } from \"../../../components/HomeComponents/HomeContent.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainHome = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HomeContent, {\n      homeData: homePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HR, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), homePage.textcontent.map((textInfo, textIdx) => /*#__PURE__*/_jsxDEV(ParagraphWrap, {\n      children: textInfo.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextTitle, {\n          children: item.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextContent, {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, textIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_c = MainHome;\nexport default MainHome;\n\n// else if (\"options\" in item) {\n//   return (\n//     <ParagraphWrap key={index}>\n//       <TextTitle>{item.title}</TextTitle>\n//       {item.options.map((textItem, textIndex) => {\n//         return (\n//           <TextWrap key={textIndex}>\n//             {textItem.map((text, index) => (\n//               <TextContent key={index}>{text.text}</TextContent>\n//             ))}\n//           </TextWrap>\n//         );\n//       })}\n//     </ParagraphWrap>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"MainHome\");","map":{"version":3,"names":["React","HomeContent","homePage","ParagraphWrap","TextTitle","TextContent","HR","jsxDEV","_jsxDEV","Fragment","_Fragment","MainHome","children","homeData","fileName","_jsxFileName","lineNumber","columnNumber","textcontent","map","textInfo","textIdx","item","index","title","text","_c","$RefreshReg$"],"sources":["/Users/ritikagurung/Documents/Git/tcs-react-training/src/pages/Home/MainHome/MainHome.jsx"],"sourcesContent":["import React from \"react\";\nimport HomeContent from \"../../../components/HomeComponents/HomeContent\";\nimport homePage from \"../../../database/home-page.json\";\nimport {\n  ParagraphWrap,\n  TextTitle,\n  TextContent,\n  HR,\n} from \"../../../components/HomeComponents/HomeContent.styles\";\n\nconst MainHome = () => {\n  return (\n    <>\n      <HomeContent homeData={homePage} />\n      <HR/>\n      {homePage.textcontent.map((textInfo, textIdx) => (\n        <ParagraphWrap key={textIdx}>\n          {textInfo.map((item, index) => (\n            <>\n              <TextTitle key={index}>{item.title}</TextTitle>\n              <TextContent>{item.text}</TextContent>\n            </>\n          ))}\n        </ParagraphWrap>\n      ))}\n    </>\n  );\n};\n\nexport default MainHome;\n\n// else if (\"options\" in item) {\n//   return (\n//     <ParagraphWrap key={index}>\n//       <TextTitle>{item.title}</TextTitle>\n//       {item.options.map((textItem, textIndex) => {\n//         return (\n//           <TextWrap key={textIndex}>\n//             {textItem.map((text, index) => (\n//               <TextContent key={index}>{text.text}</TextContent>\n//             ))}\n//           </TextWrap>\n//         );\n//       })}\n//     </ParagraphWrap>\n//   );\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,gDAAgD;AACxE,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SACEC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXC,EAAE,QACG,uDAAuD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACP,WAAW;MAACY,QAAQ,EAAEX;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCT,OAAA,CAACF,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACJf,QAAQ,CAACgB,WAAW,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,OAAO,kBAC1Cb,OAAA,CAACL,aAAa;MAAAS,QAAA,EACXQ,QAAQ,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,KAAK,kBACxBf,OAAA,CAAAE,SAAA;QAAAE,QAAA,gBACEJ,OAAA,CAACJ,SAAS;UAAAQ,QAAA,EAAcU,IAAI,CAACE;QAAK,GAAlBD,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAAC,eAC/CT,OAAA,CAACH,WAAW;UAAAO,QAAA,EAAEU,IAAI,CAACG;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA,eACtC,CACH;IAAC,GANgBI,OAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CAChB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACS,EAAA,GAjBIf,QAAQ;AAmBd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}